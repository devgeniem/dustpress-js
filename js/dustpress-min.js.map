{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/dustpress.js","webpack:///external \"jQuery\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","jQuery","window","DustPress","document","$","dp","defaults","type","tidy","render","partial","upload","data","url","bypassMainQuery","success","error","uploadProgress","downloadProgress","contentType","start","complete","crypto","getRandomValues","token","Uint32Array","Math","random","ajax","path","params","post","extend","instance","args","length","startsWith","date","Date","setTime","getTime","cookie","toGMTString","options","dustpressjs_endpoint","location","method","dustpress_data","JSON","stringify","xhr","XMLHttpRequest","addEventListener","uploadProgressHandler","downloadProgressHandler","successHandler","textStatus","jqXHR","parsed","parseJSON","DustPressDebugger","debug","errorHandler","errorThrown","event","lengthComputable","loaded","total","done","fail","always"],"mappings":"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","file":"dustpress-min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","window.DustPress = ( function( window, document, $ ) {\n\tvar dp = {};\n\t\n\tdp.defaults = {\n\t\t\"type\"\t  \t\t   : \"post\",\n\t\t\"tidy\"    \t\t   : false,\n\t\t\"render\"  \t\t   : false,\n\t\t\"partial\" \t\t   : null,\n\t\t\"upload\"  \t\t   : false,\n\t\t\"data\"             : false,\n\t\t\"url\"              : null,\n\t\t\"bypassMainQuery\"  : true,\n\t\t\"success\" \t\t   : function() {},\n\t\t\"error\"   \t\t   : function() {},\n\t\t\"uploadProgress\"   : function() {},\n\t\t\"downloadProgress\" : function() {},\n\t\t\"contentType\"      : \"application/json\"\n\t};\n\n\tdp.start    = function() {};\n\tdp.complete = function() {};\n\n\t// Create token for CSRF protection\n\tif ( typeof window.crypto !== 'undefined' && typeof window.crypto.getRandomValues === 'function' ) { \n\t\tdp.token = '';\n\n\t\tfor ( var i = 0; i < 4; i++ ) {\n\t\t\tdp.token += window.crypto.getRandomValues( new Uint32Array(1) );\n\t\t}\n\t}\n\telse {\n\t\tdp.token = Math.random() + '' + Math.random();\n\t}\n\n\tdp.ajax = function( path, params ) {\n\n\t\tvar post = $.extend( {}, dp.defaults, params );\n\n\t\t// Create a new instance of the default object so that simultaneous\tcalls wouldn't clash.\n\t\tvar instance = {};\n\n\t\t// Assign the variables\n\t\tinstance.type               = post.type;\n\t\tinstance.success \t        = post.success;\n\t\tinstance.error \t            = post.error;\n\t\tinstance.url                = post.url;\n\t\tinstance.uploadProgress     = post.uploadProgress;\n\t\tinstance.downloadProgress   = post.downloadProgress;\n\t\tinstance.get \t\t        = post.get ? params.get : '';\n\t\tinstance.path\t\t        = path;\n\t\tinstance.args               = post.args;\n\t\tinstance.data               = post.data;\n\t\tinstance.partial            = post.partial;\n\t\tinstance.render             = post.render;\n\t\tinstance.tidy               = post.tidy;\n\t\tinstance.upload             = post.upload;\n\t\tinstance.contentType        = post.contentType;\n\t\tinstance.bypassMainQuery    = post.bypassMainQuery;\n\t\tinstance.params \t        = params;\n\t\tinstance.start              = dp.start;\n\t\tinstance.complete           = dp.complete;\n\n\t\tif ( instance.get.length && ! instance.get.startsWith('?') ) {\n\t\t\tinstance.get = '?' + instance.get;\n\t\t}\n\n\t\t\n\n\t\tvar date = new Date();\n        date.setTime( date.getTime() + ( 24*60*60*1000 ) );\n\t    \n\t    // Set the cookie for the token\n\t    document.cookie = 'dpjs_token=' + dp.token + '; expires=' + date.toGMTString() + '; path=/';\n\n\t\tvar options = {\n\t\t\turl: ( instance.url || dustpressjs_endpoint || ( window.location + instance.get ) ),\n\t\t\tmethod: instance.type,\n\t\t\tcontentType: instance.contentType,\n\t\t\tdata: {\n\t\t\t\tdustpress_data: {\n\t\t\t\t\tpath            : path,\n\t\t\t\t\targs            : instance.args,\n\t\t\t\t\trender          : instance.render,\n\t\t\t\t\ttidy            : instance.tidy,\n\t\t\t\t\tpartial         : instance.partial,\n\t\t\t\t\tdata            : instance.data,\n\t\t\t\t\ttoken           : dp.token,\n\t\t\t\t\tbypassMainQuery : instance.bypassMainQuery\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Stringify data so it can be sent\n\t\toptions.data = JSON.stringify( options.data );\n\n\t\tif ( instance.upload ) {\n\t\t\toptions.xhr = function() {\n\t\t\t\tvar xhr = new window.XMLHttpRequest();\n\n\t\t\t\txhr.upload.addEventListener( 'progress', instance.uploadProgressHandler, false );\n\t\t\t\txhr.addEventListener( 'progress', instance.downloadProgressHandler, false );\n\t\t\t};\n\t\t}\n\n\t\tinstance.start();\n\n\t\tinstance.successHandler = function( data, textStatus, jqXHR ) {\n\t\t\tvar parsed;\n\n\t\t\tif ( typeof data === 'string' ) {\n\t\t\t\tparsed = $.parseJSON( data );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tparsed = data;\n\t\t\t}\n\t\t\t\n\t\t\t// Expire CSRF cookie\n\t\t\tdocument.cookie = 'dpjs_token=; expires=-1; path=/';\n\t\n\t\t\t// Add to debugger data if it exists\n\t\t\tif ( window.DustPressDebugger ) {\n\t\t\t\tdelete instance.params.success;\n\t\t\t\tdelete instance.params.error;\n\t\n\t\t\t\tvar debug = {\n\t\t\t\t\tparams: instance.params,\n\t\t\t\t\tdata: parsed.debug ? parsed.debug : parsed\n\t\t\t\t};\n\t\t\t\twindow.DustPressDebugger.extend(debug, instance.path);\n\t\t\t}\n\t\n\t\t\tif ( parsed && ! parsed.error ) {\n\t\t\t\tinstance.success(parsed.success, parsed.data, textStatus, jqXHR);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tinstance.error(parsed, textStatus, jqXHR);\n\t\t\t}\n\t\t};\n\t\n\t\tinstance.errorHandler = function( jqXHR, textStatus, errorThrown ) {\n\t\t\t// Expire CSRF cookie\n\t\t\tdocument.cookie = 'dpjs_token=; expires=-1; path=/';\n\t\n\t\t\tinstance.error({error: errorThrown}, textStatus, jqXHR);\n\t\t};\n\t\n\t\tinstance.uploadProgressHandler = function( event ) {\n\t\t\tif ( event.lengthComputable ) {\n\t\t\t\tvar complete = ( event.loaded / event.total );\n\t\n\t\t\t\tinstance.uploadProgress( complete );\t\n\t\t\t}\n\t\t};\n\t\n\t\tinstance.downloadProgressHandler = function( event ) {\n\t\t\tif ( event.lengthComputable ) {\n\t\t\t\tvar complete = ( event.loaded / event.total );\n\t\n\t\t\t\tinstance.downloadProgress( complete );\n\t\t\t}\n\t\t};\n\n\t\treturn $.ajax( options )\n\t\t.done( instance.successHandler )\n\t\t.fail( instance.errorHandler )\n\t\t.always( instance.complete );\n\t};\n\n\treturn dp;\n\n})( window, document, jQuery );\n\nwindow.dp = window.DustPress.ajax;\n","module.exports = jQuery;"],"sourceRoot":""}