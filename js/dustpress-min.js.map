{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/DPRequest.js","webpack:///./js/dustpress.js","webpack:///external \"jQuery\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DPRequest","path","params","arguments","length","undefined","_classCallCheck","this","_defineProperty","type","tidy","render","partial","upload","data","url","bypassMainQuery","contentType","token","success","error","uploadProgress","downloadProgress","start","complete","assign","_this","startsWith","date","Date","setTime","getTime","document","cookie","toGMTString","options","dustpressjs_endpoint","window","location","method","dustpress_data","args","JSON","stringify","xhr","xhrUpload","successHandler","textStatus","jqXHR","errorHandler","errorThrown","uploadProgressHandler","event","uploadDownloadProgressHandler","downloadProgressHandler","$","ajax","done","fail","always","dataOrXhr","xhrOrError","parsed","parseJSON","DustPressDebugger","addToDebugger","_this2","XMLHttpRequest","addEventListener","lengthComputable","loaded","total","debug","extend","DustPress","setupCrypto","crypto","getRandomValues","Uint32Array","Math","random","send","dp","jQuery"],"mappings":"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","file":"dustpress-min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export default class DPRequest {\n\n    /**\n     * Request path\n     *\n     * @type {String}\n     */\n    path = '';\n\n    /**\n     * Default instance params\n     *\n     * @type {Object}\n     */\n    params = {\n        get: '',\n        type: 'post',\n        tidy: false,\n        render: false,\n        partial: null,\n        upload: false,\n        data: false,\n        url: null,\n        bypassMainQuery: true,\n        contentType: 'application/json',\n        token: '',\n        success: () => {},\n        error: () => {},\n        uploadProgress: () => {},\n        downloadProgress: () => {},\n        start: () => {},\n        complete: () => {}\n    };\n\n    /**\n     * Construct the dustpress request\n     *\n     * @param {Object} params Params to use in request\n     */\n    constructor( path, params = {}) {\n        this.path = path;\n\n        // Override default params with given ones\n        this.params = Object.assign( this.params, params );\n    }\n\n    send() {\n        if ( this.params.get.length && ! this.params.get.startsWith( '?' ) ) {\n            this.params.get = '?' + this.params.get;\n        }\n\n        const date = new Date();\n        date.setTime( date.getTime() + ( 24 * 60 * 60 * 1000 ) );\n\n        // Set the cookie for the token\n        document.cookie = 'dpjs_token=' + this.params.token + '; expires=' + date.toGMTString() + '; path=/';\n\n        const options = {\n            url: ( this.params.url || dustpressjs_endpoint || ( window.location + this.params.get ) ),\n            method: this.params.type,\n            contentType: this.params.contentType,\n            data: {\n                dustpress_data: {\n                    path: this.path,\n                    args: this.params.args,\n                    render: this.params.render,\n                    tidy: this.params.tidy,\n                    partial: this.params.partial,\n                    data: this.params.data,\n                    token: this.params.token,\n                    bypassMainQuery: this.params.bypassMainQuery\n                }\n            }\n        };\n\n        // Stringify data so it can be sent\n        options.data = JSON.stringify( options.data );\n\n        if ( this.params.upload ) {\n            options.xhr = () => this.xhrUpload();\n        }\n\n        this.params.start();\n\n        this.params.successHandler          = ( data, textStatus, jqXHR ) => this.successHandler( data, textStatus, jqXHR );\n        this.params.errorHandler            = ( jqXHR, textStatus, errorThrown ) => this.errorHandler( jqXHR, textStatus, errorThrown );\n        this.params.uploadProgressHandler   = ( event ) => this.uploadDownloadProgressHandler( event );\n        this.params.downloadProgressHandler = ( event ) => this.uploadDownloadProgressHandler( event );\n\n        return $.ajax( options )\n        .done( ( data, textStatus, jqXHR ) => this.params.successHandler( data, textStatus, jqXHR ) )\n        .fail( ( jqXHR, textStatus, errorThrown ) => this.params.errorHandler( jqXHR, textStatus, errorThrown ) )\n        .always( ( dataOrXhr, textStatus, xhrOrError ) => this.params.complete( dataOrXhr, textStatus, xhrOrError ) );\n    }\n\n    /**\n     * Handle ajax success\n     *\n     * @param  {string|mixed} data       Data retrieved by ajax call.\n     * @param  {string}       textStatus Response status.\n     * @param  {jqXHR}        jqXHR      Superset of the browser's native XMLHttpRequest object.\n     */\n    successHandler( data, textStatus, jqXHR ) {\n        let parsed;\n\n        if ( typeof data === 'string' ) {\n            parsed = $.parseJSON( data );\n        } else {\n            parsed = data;\n        }\n\n        // Expire CSRF cookie\n        document.cookie = 'dpjs_token=; expires=-1; path=/';\n\n        // Add to debugger data if it exists\n        if ( window.DustPressDebugger ) {\n            this.addToDebugger( parsed );\n        }\n\n        if ( parsed && ! parsed.error ) {\n            this.params.success( parsed.success, parsed.data, textStatus, jqXHR );\n        } else {\n            this.params.error( parsed, textStatus, jqXHR );\n        }\n    }\n\n    /**\n     * Handle file uploads\n     */\n    xhrUpload() {\n        const xhr = new window.XMLHttpRequest();\n\n        xhr.upload.addEventListener( 'progress', ( event ) => this.params.uploadProgressHandler( event ), false );\n        xhr.addEventListener( 'progress', ( event ) => this.params.uploadDownloadProgressHandler( event ), false );\n    }\n\n    /**\n     * Handle errors.\n     *\n     * @param  {jqXHR}  jqXHR       Superset of the browser's native XMLHttpRequest object.\n     * @param  {string} textStatus  Response status.\n     * @param  {mixed}  errorThrown Ajax call error.\n     */\n    errorHandler( jqXHR, textStatus, errorThrown ) {\n\n        // Expire CSRF cookie\n        document.cookie = 'dpjs_token=; expires=-1; path=/';\n\n        this.params.error({error: errorThrown}, textStatus, jqXHR );\n    }\n\n    /**\n     * Handle uploar or download progress.\n     *\n     * @param {object} event Event data.\n     */\n    uploadDownloadProgressHandler( event ) {\n        if ( event.lengthComputable ) {\n            const complete = ( event.loaded / event.total );\n\n            this.params.downloadProgress( complete );\n        }\n    }\n\n    /**\n     * Add called data to dustpress debugger\n     *\n     * @param {object} parsed Parsed data.\n     */\n    addToDebugger( parsed ) {\n        delete this.params.params.success;\n        delete this.params.params.error;\n\n        const debug = {\n            params: this.params.params,\n            data: parsed.debug ? parsed.debug : parsed\n        };\n        window.DustPressDebugger.extend( debug, this.params.path );\n    }\n}\n","import DPRequest from './DPRequest';\n\nexport default class DustPress {\n\n    /**\n     * Constains the crypt token\n     *\n     * @type {String}\n     */\n    token = '';\n\n    /**\n     * Construct class, setup crypt token\n     */\n    constructor() {\n        this.setupCrypto();\n    }\n\n    /**\n     * Setup token\n     */\n    setupCrypto() {\n\n        // Create token for CSRF protection\n        if ( typeof window.crypto !== 'undefined' && typeof window.crypto.getRandomValues === 'function' ) {\n            this.token = '';\n\n            for ( let i = 0; i < 4; i++ ) {\n                this.token += window.crypto.getRandomValues( new Uint32Array( 1 ) );\n            }\n        } else {\n            this.token = Math.random() + '' + Math.random();\n        }\n    }\n\n    /**\n     * Make the ajax call.\n     *\n     * @param  {string}      path   Dustpress call path.\n     * @param  {object|null} params Ajax call params.\n     * @return {jqXHR}              Superset of the browser's native XMLHttpRequest object.\n     */\n    ajax( path, params = {}) {\n        params.token = this.token;\n        const request = new DPRequest( path, params );\n        return request.send();\n    }\n}\n\n// Register legacy functionality\nif ( typeof window.DustPress === 'undefined' ) {\n    window.DustPress = new DustPress();\n    window.dp = ( path, params ) => {\n        return window.DustPress.ajax( path, params );\n    };\n}\n","module.exports = jQuery;"],"sourceRoot":""}